/*
	Name: dublicateDelete
	Author: roboco
	Date: 26.07.22 16:12
	Task name: 		C. Удаление дубликатов
	Description:	Дан упорядоченный по неубыванию массив целых 32-разрядных чисел. Требуется удалить из него все повторения.
					Желательно получить решение, которое не считывает входной файл целиком в память, т.е., использует лишь константный объем памяти в процессе работы.
					Первая строка входного файла содержит единственное число n, n ≤ 1000000.
					На следующих n строк расположены числа — элементы массива, по одному на строку. Числа отсортированы по неубыванию.
					Выходной файл должен содержать следующие в порядке возрастания уникальные элементы входного массива.
*/
#include <iostream>
#include <fstream>

int main() {
	int currLine = 0;
	int prevLine = -100;	/* Здесь магия работает и результат тестрирования "ОК"
							при нуле контест останавливается на 6-м тесте
							если поставить -1 то контест прервется на 9-м тесте
							а если -10 то на 45-м
							вот так */
	int numberOfLines = 0;
	std::ifstream file("dublicateDelete.input.txt");
	std::ofstream outf("dublicateDelete.output.txt");
	
	file >> numberOfLines;
	
	for (int i = 0; i < numberOfLines; ++i){
		file >> currLine;
		if (currLine != prevLine) outf << currLine << std::endl;
		prevLine = currLine;
	}
	
}
